name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
permissions:
  contents: write
  pages: write
  id-token: write
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Download emscripten
      run: |
            sudo apt-get install emscripten
            sudo apt-get install libsdl2-dev
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: emcmake cmake -B ${{github.workspace}}/build


    - name: Build
      # Build your program with the given configuration
      run: |
           cd ${{github.workspace}}/build
           make
    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v1.0.8
      with:
    # Artifact name
         # optional, default is github-pages
    # Path of the directory containing the static assets.
        path:  ${{github.workspace}}/build/bin/ 
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v2.0.1
      
    # default is _site/
    # Duration after which artifact will expire in days.
       # retention-days: # optional, default is 1
   # - name: Test
    #  working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
     # run: ctest -C ${{env.BUILD_TYPE}}

